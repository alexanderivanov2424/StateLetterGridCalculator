{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander Ivanov\\\\Desktop\\\\Javascript\\\\StateLetterGridCalculator\\\\state-letter-grid\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [States(), Grid(), Achievements()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction States() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"States\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"California\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Texas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c2 = States;\nfunction Grid() {\n  const grid = [];\n  for (let i = 0; i < 5; i++) {\n    const row = [];\n    for (let j = 0; j < 5; j++) {\n      row.push( /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"grid-\" + i + \"-\" + j,\n        name: \"grid-\" + i + \"-\" + j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this));\n    }\n    grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Grid\",\n    children: grid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_c3 = Grid;\nfunction Achievements() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"first\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"second\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Achievements;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"States\");\n$RefreshReg$(_c3, \"Grid\");\n$RefreshReg$(_c4, \"Achievements\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","App","children","States","Grid","Achievements","fileName","_jsxFileName","lineNumber","columnNumber","_c","class","_c2","grid","i","row","j","push","type","id","name","_c3","_c4","$RefreshReg$"],"sources":["C:/Users/Alexander Ivanov/Desktop/Javascript/StateLetterGridCalculator/state-letter-grid/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      {States()}\n      {Grid()}\n      {Achievements()}\n    </div>\n  );\n}\n\nfunction States() {\n  return (\n    <div class=\"States\">\n      <p>California</p>\n      <p>Texas</p>\n    </div>\n  );\n}\n\nfunction Grid() {\n  const grid = [];\n\n  for (let i = 0; i < 5; i++) {\n    const row = [];\n    for (let j = 0; j < 5; j++) {\n      row.push(\n        <input\n          type=\"text\"\n          id={\"grid-\" + i + \"-\" + j}\n          name={\"grid-\" + i + \"-\" + j}\n        />\n      );\n    }\n    grid.push(<div>{row}</div>);\n  }\n\n  return <div class=\"Grid\">{grid}</div>;\n}\n\nfunction Achievements() {\n  return (\n    <div class=\"Grid\">\n      <p>first</p>\n      <p>second</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,GACGC,MAAM,CAAC,CAAC,EACRC,IAAI,CAAC,CAAC,EACNC,YAAY,CAAC,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACC,EAAA,GARQT,GAAG;AAUZ,SAASE,MAAMA,CAAA,EAAG;EAChB,oBACEH,OAAA;IAAKW,KAAK,EAAC,QAAQ;IAAAT,QAAA,gBACjBF,OAAA;MAAAE,QAAA,EAAG;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjBT,OAAA;MAAAE,QAAA,EAAG;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACG,GAAA,GAPQT,MAAM;AASf,SAASC,IAAIA,CAAA,EAAG;EACd,MAAMS,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,MAAMC,GAAG,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,GAAG,CAACE,IAAI,eACNjB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAE,OAAO,GAAGL,CAAC,GAAG,GAAG,GAAGE,CAAE;QAC1BI,IAAI,EAAE,OAAO,GAAGN,CAAC,GAAG,GAAG,GAAGE;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CACH,CAAC;IACH;IACAI,IAAI,CAACI,IAAI,eAACjB,OAAA;MAAAE,QAAA,EAAMa;IAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC;EAC7B;EAEA,oBAAOT,OAAA;IAAKW,KAAK,EAAC,MAAM;IAAAT,QAAA,EAAEW;EAAI;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACvC;AAACY,GAAA,GAlBQjB,IAAI;AAoBb,SAASC,YAAYA,CAAA,EAAG;EACtB,oBACEL,OAAA;IAAKW,KAAK,EAAC,MAAM;IAAAT,QAAA,gBACfF,OAAA;MAAAE,QAAA,EAAG;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACZT,OAAA;MAAAE,QAAA,EAAG;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACa,GAAA,GAPQjB,YAAY;AASrB,eAAeJ,GAAG;AAAC,IAAAS,EAAA,EAAAE,GAAA,EAAAS,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}